log:
  level: INFO

entryPoints:
  web:
    # http
    address: ':80'
    http:
      # https://doc.traefik.io/traefik/routing/entrypoints/#entrypoint
      redirections:
        entryPoint:
          to: web-secure

  web-secure:
    # https
    address: ':443'

  flower:
    address: ':5555'

certificatesResolvers:
  letsencrypt:
    # https://doc.traefik.io/traefik/https/acme/#lets-encrypt
    acme:
      email: 'sharif-elguindi@mate.consensusai.com'
      storage: /etc/traefik/acme/acme.json
      # https://doc.traefik.io/traefik/https/acme/#httpchallenge
      httpChallenge:
        entryPoint: web

http:
  routers:
    # Router for localhost/127.0.0.1 (local development)
    web-local-router:
      rule: 'Host(`localhost`) || Host(`127.0.0.1`)'
      entryPoints:
        - web-secure
      middlewares:
        - csrf
        - websocket-headers
      service: django
      tls: {}  # Use default self-signed cert

    # Router for production domain
    web-secure-router:
      rule: 'Host(`mate.consensusai.com`)'
      entryPoints:
        - web-secure
      middlewares:
        - csrf
        - websocket-headers
      service: django
      tls:
        # https://doc.traefik.io/traefik/routing/routers/#certresolver
        certResolver: letsencrypt

    # Flower router for localhost
    flower-local-router:
      rule: 'Host(`localhost`) || Host(`127.0.0.1`)'
      entryPoints:
        - flower
      service: flower
      tls: {}  # Use default self-signed cert

    # Flower router for production
    flower-secure-router:
      rule: 'Host(`mate.consensusai.com`)'
      entryPoints:
        - flower
      service: flower
      tls:
        # https://doc.traefik.io/traefik/master/routing/routers/#certresolver
        certResolver: letsencrypt

  middlewares:
    csrf:
      # https://doc.traefik.io/traefik/master/middlewares/http/headers/#hostsproxyheaders
      # https://docs.djangoproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: ['X-CSRFToken']

    websocket-headers:
      # Headers for WebSocket support
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          X-Forwarded-Proto: "https"

  services:
    django:
      loadBalancer:
        servers:
          - url: http://django:8000

    flower:
      loadBalancer:
        servers:
          - url: http://flower:5555

providers:
  # https://doc.traefik.io/traefik/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
