#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

# Wait for dependencies
python << END
import sys
import time
import psycopg

suggest_unrecoverable_after = 30
start = time.time()

while True:
    try:
        psycopg.connect(
            dbname="${POSTGRES_DB}",
            user="${POSTGRES_USER}",
            password="${POSTGRES_PASSWORD}",
            host="${POSTGRES_HOST}",
            port="${POSTGRES_PORT}",
        )
        break
    except psycopg.OperationalError as error:
        sys.stderr.write("Waiting for PostgreSQL to become available...\n")

        if time.time() - start > suggest_unrecoverable_after:
            sys.stderr.write("  This is taking longer than expected. The following exception may be indicative of an unrecoverable error: '{}'\n".format(error))

    time.sleep(1)
END

>&2 echo 'PostgreSQL is available'

echo "Starting Provisioning Celery Worker..."

# For local development, mock AWS credentials if not set
export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-"mock-access-key"}
export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-"mock-secret-key"}
export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-"us-east-1"}

# Start provisioning worker with limited concurrency
exec watchfiles --filter python celery.__main__.main \
    --args '-A config.celery_app worker -l INFO -Q provisioning -c 2 --prefetch-multiplier=1 -n provisioning@%h'